{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","App.module.css","components/Loader/Loader.module.css","components/Filter/Filter.module.css","redux/contact-selectors.js","components/Loader/Loader.js","redux/reduxActions.js","data-api/api-contacts.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","redux/contactsAsyncOperation.js","components/Filter/Filter.js","App.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["module","exports","getState","state","getContactMemo","createSelector","contacts","Load","className","s","loader","type","color","height","width","timeout","actionAddContact","createAction","contact","payload","actionRemoveContact","id","actionSetFilter","filter","actionContactLoading","flag","actionGetContactsSuccess","actionGetContactError","value","axios","require","defaults","baseURL","asyncGetContacts","a","get","data","postContacts","post","deletePostContacts","delete","ContactList","useSelector","dispatch","useDispatch","onRemove","length","style","contactUl","name","toLowerCase","includes","map","phone","contactLi","onClick","p__delete","ContactForm","onAdd","useEffect","useState","setName","setPhone","handleChangeForm","target","console","log","validateFrom","toast","warn","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","isExistName","some","isExistPhone","error","handleCheckUniqueContact","contactForm","onSubmit","e","preventDefault","uuidv4","contactForm__input","placeholder","onChange","buttonSubmit","Filter","input__filter","App","isLoading","titleList","Loader","newestOnTop","rtl","pauseOnFocusLoss","reducerContacts","createReducer","_state","reducerFilter","_","reducerLoading","rootReducer","combineReducers","composeEnhancers","composeWithDevTools","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.416190dc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactUl\":\"ContactList_contactUl__6XKhq\",\"contactLi\":\"ContactList_contactLi__26xFu\",\"name\":\"ContactList_name__1WsRI\",\"phone\":\"ContactList_phone__218th\",\"p__delete\":\"ContactList_p__delete__2SYhY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__3AaUi\",\"contactForm__input\":\"ContactForm_contactForm__input__kFi_1\",\"buttonSubmit\":\"ContactForm_buttonSubmit__22SaD\",\"root\":\"ContactForm_root__S5hUQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titleList\":\"App_titleList__Phn0w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__3JAbA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input__filter\":\"Filter_input__filter__2ZTF7\"};","import { createSelector } from 'reselect';\nconst getContact = state => state;\nconst getState = state => state;\nconst getContactMemo = createSelector([getContact], contacts => contacts);\nexport { getContactMemo, getState };\n","import 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport Loader from 'react-loader-spinner';\nimport s from './Loader.module.css';\n\nconst Load = () => {\n  return (\n    <Loader\n      className={s.loader}\n      type=\"Puff\"\n      color=\"#0ca0f5\"\n      height={100}\n      width={100}\n      timeout={300000}\n    />\n  );\n};\nexport default Load;\n","import { createAction } from '@reduxjs/toolkit';\nconst actionAddContact = createAction('items/add', contact => ({\n  payload: contact,\n}));\nconst actionRemoveContact = createAction('items/remove', id => ({\n  payload: id,\n}));\nconst actionSetFilter = createAction('filter/addFilter', filter => ({\n  payload: filter,\n}));\nconst actionContactLoading = createAction('items/request', flag => ({\n  payload: flag,\n}));\nconst actionGetContactsSuccess = createAction('items/success', contacts => ({\n  payload: contacts,\n}));\nconst actionGetContactError = createAction('items/error', value => ({\n  payload: value,\n}));\n\nexport {\n  actionAddContact,\n  actionRemoveContact,\n  actionSetFilter,\n  actionContactLoading,\n  actionGetContactsSuccess,\n  actionGetContactError,\n};\n","const axios = require('axios');\naxios.defaults.baseURL = 'http://localhost:3000';\nconst asyncGetContacts = async () => {\n  const { data } = await axios.get(`/contacts`);\n  return data;\n};\n\nconst postContacts = async contact => await axios.post(`/contacts`, contact);\nconst deletePostContacts = async id => await axios.delete(`/contacts/${id}`);\n\nexport { asyncGetContacts, postContacts, deletePostContacts };\n","import { useSelector, useDispatch } from 'react-redux';\nimport { getState } from '../../redux/contact-selectors';\nimport { actionRemoveContact } from '../../redux/reduxActions';\nimport { deletePostContacts } from '../../data-api/api-contacts';\nimport style from './ContactList.module.css';\n\nconst ContactList = () => {\n  const { contacts, filter } = useSelector(getState);\n  const dispatch = useDispatch();\n  const onRemove = async id => {\n    await deletePostContacts(id);\n    dispatch(actionRemoveContact(id));\n  };\n\n  const getVisibleContacts = () => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  return contacts.length !== 0 ? (\n    <>\n      <ul className={style.contactUl}>\n        {getVisibleContacts().map(({ id, name, phone }) => {\n          return (\n            <li className={style.contactLi} key={id}>\n              <p className={style.name}>{name}</p>\n              <p className={style.phone}>{phone}</p>\n              <p\n                onClick={() => {\n                  onRemove(id);\n                }}\n                className={style.p__delete}\n              >\n                Delete\n              </p>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  ) : null;\n};\n\nexport default ContactList;\n","import style from './ContactForm.module.css';\nimport { toast } from 'react-toastify';\nimport { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { v4 as uuidv4 } from 'uuid';\nimport { asyncOperationGetContacts } from '../../redux/contactsAsyncOperation';\nimport { actionAddContact } from '../../redux/reduxActions';\nimport { postContacts } from '../../data-api/api-contacts';\nimport { getContactMemo } from '../../redux/contact-selectors';\n\nfunction ContactForm() {\n  const { contacts } = useSelector(getContactMemo);\n  const dispatch = useDispatch();\n  const onAdd = async contact => {\n    await postContacts(contact);\n    dispatch(actionAddContact(contact));\n  };\n\n  useEffect(() => dispatch(asyncOperationGetContacts()), [dispatch]);\n\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n\n  const handleChangeForm = ({ target }) => {\n    const { name, value } = target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'phone':\n        setPhone(value);\n        break;\n      default:\n        console.log('Sorry, we are not have ' + name + '.');\n    }\n  };\n  const handleCheckUniqueContact = () => {\n    const isExistName = contacts.some(contact => contact.name === name);\n    const isExistPhone = contacts.some(contact => contact.phone === phone);\n    isExistName &&\n      toast.warn('⚠️ You have contact with same name!', {\n        position: 'top-right',\n        autoClose: 2500,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    isExistPhone &&\n      toast.error('🚀 Number has been using!', {\n        position: 'top-right',\n        autoClose: 2500,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    return !isExistPhone;\n  };\n\n  const validateFrom = () => {\n    if (!name && !phone) {\n      toast.warn('⚠️ Fields are empty!', {\n        position: 'top-right',\n        autoClose: 1500,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n      return false;\n    }\n\n    if (!name && phone) {\n      toast.warn('⚠️ Field name empty!', {\n        position: 'top-right',\n        autoClose: 1500,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n      return false;\n    }\n\n    if (!phone && name) {\n      toast.warn('⚠️ Field phone empty!', {\n        position: 'top-right',\n        autoClose: 1500,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n      return false;\n    }\n\n    if (phone.length !== 10) {\n      toast.warn('⚠️ Number has to have 10 symbols!', {\n        position: 'top-right',\n        autoClose: 1500,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n      return false;\n    }\n\n    if (name.length > 12) {\n      toast.warn('⚠️ Name has to be no longer 12 characters!', {\n        position: 'top-right',\n        autoClose: 1500,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n      return false;\n    }\n\n    return handleCheckUniqueContact();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setPhone('');\n  };\n\n  const handleFromSubmit = e => {\n    e.preventDefault();\n    const isExistPhone = validateFrom();\n    if (!isExistPhone) return;\n    resetForm();\n    onAdd({ id: uuidv4(), name, phone });\n  };\n\n  return (\n    <form className={style.contactForm} onSubmit={handleFromSubmit}>\n      <input\n        className={style.contactForm__input}\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Enter name\"\n        value={name}\n        onChange={handleChangeForm}\n      ></input>\n      <input\n        className={style.contactForm__input}\n        type=\"tel\"\n        name=\"phone\"\n        placeholder=\"Enter phone number\"\n        value={phone}\n        onChange={handleChangeForm}\n      ></input>\n      <button className={style.buttonSubmit} type=\"submit\">\n        Add Contact\n      </button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import {\n  actionContactLoading,\n  actionGetContactsSuccess,\n  actionGetContactError,\n} from './reduxActions';\nimport { asyncGetContacts } from '../data-api/api-contacts';\n\nconst asyncOperationGetContacts = () => async dispatch => {\n  try {\n    dispatch(actionContactLoading(true));\n    const data = await asyncGetContacts();\n    dispatch(actionGetContactsSuccess(data));\n  } catch (error) {\n    dispatch(actionGetContactError([]));\n  } finally {\n    dispatch(actionContactLoading(false));\n  }\n};\n\nexport { asyncOperationGetContacts };\n","import style from './Filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getState } from '../../redux/contact-selectors';\nimport { actionSetFilter } from '../../redux/reduxActions';\n\nconst Filter = () => {\n  const { filter } = useSelector(getState);\n  const dispatch = useDispatch();\n  const handleFilterChange = value => dispatch(actionSetFilter(value));\n  return (\n    <input\n      className={style.input__filter}\n      type=\"text\"\n      name=\"filter\"\n      value={filter}\n      onChange={({ target }) => handleFilterChange(target.value)}\n      placeholder=\"Enter name for Search\"\n    />\n  );\n};\nexport default Filter;\n","import 'react-toastify/dist/ReactToastify.css';\nimport { ToastContainer } from 'react-toastify';\nimport { useSelector } from 'react-redux';\nimport { getState } from './redux/contact-selectors.js';\nimport Loader from 'components/Loader/Loader.js';\nimport ContactList from 'components/ContactList/ContactList.js';\nimport ContactForm from 'components/ContactForm/ContactForm.js';\nimport Filter from 'components/Filter/Filter.js';\nimport style from './App.module.css';\n\nfunction App() {\n  const { isLoading } = useSelector(getState);\n  return (\n    <>\n      <h2 className={style.titleList}>From Contact</h2>\n      <ContactForm />\n      <h2 className={style.titleList}>Contacts list</h2>\n      <Filter />\n      {isLoading ? <Loader /> : <ContactList />}\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={3000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n    </>\n  );\n}\n\nexport default App;\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\nimport {\n  actionAddContact,\n  actionRemoveContact,\n  actionSetFilter,\n  actionGetContactsSuccess,\n  actionGetContactError,\n  actionContactLoading,\n} from './reduxActions';\n\nconst reducerContacts = createReducer([], {\n  [actionAddContact]: (state, { payload }) => {\n    const itemsAdd = [...state, payload];\n    return itemsAdd;\n  },\n  [actionRemoveContact]: (state, { payload }) => {\n    const itemsRemove = [...state.filter(contact => contact.id !== payload)];\n    return itemsRemove;\n  },\n  [actionGetContactsSuccess]: (_state, { payload }) => {\n    return payload;\n  },\n  [actionGetContactError]: (_state, { payload }) => {\n    return payload;\n  },\n});\n\nconst reducerFilter = createReducer('', {\n  [actionSetFilter]: (_, { payload }) => payload,\n});\nconst reducerLoading = createReducer(false, {\n  [actionContactLoading]: (_, { payload }) => payload,\n});\n\nexport const rootReducer = combineReducers({\n  contacts: reducerContacts,\n  filter: reducerFilter,\n  isLoading: reducerLoading,\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { rootReducer } from './rootReducer';\n\nconst composeEnhancers = composeWithDevTools({});\n\nexport const store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk)),\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nimport { store } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}