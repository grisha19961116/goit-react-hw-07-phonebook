{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","redux/reduxActions.js","data/api-contacts.js","components/ContactList/ContactList.js","redux/contactsOperation.js","redux/contact-selectors.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","App.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["module","exports","actionAddContact","createAction","newContact","payload","actionRemoveContact","id","actionSetFilter","filter","actionContactRequestStatus","flag","actionGetContactsSuccess","contacts","actionContactError","value","axios","require","defaults","baseURL","asyncGetContacts","a","get","data","postContacts","postContact","post","deletePostContacts","idContact","delete","ContactList","useSelector","state","items","isLoading","dispatch","useDispatch","onRemove","length","console","log","filterInput","contact","name","toLowerCase","includes","getVisibleContacts","map","phone","onClick","className","style","button__delete","getContactMemo","createSelector","ContactForm","onAdd","useEffect","useState","setName","setPhone","handleChangeForm","target","validateFrom","arrayItems","nameContact","isExistContact","find","alert","handleCheckUniqueContact","toast","onSubmit","e","preventDefault","uuidv4","type","placeholder","onChange","Filter","input__filter","valueInput","App","reducerContacts","createReducer","reducerFilter","_","reducerLoading","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.14ef6940.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button__delete\":\"ContactList_button__delete__2EaXX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input__filter\":\"Filter_input__filter__3EZWK\"};","import { createAction } from '@reduxjs/toolkit';\nconst actionAddContact = createAction('items/add', newContact => ({\n  payload: newContact,\n}));\nconst actionRemoveContact = createAction('items/remove', id => ({\n  payload: id,\n}));\nconst actionSetFilter = createAction('filter/addFilter', filter => ({\n  payload: filter,\n}));\nconst actionContactRequestStatus = createAction('items/request', flag => ({\n  payload: flag,\n}));\nconst actionGetContactsSuccess = createAction('items/success', contacts => ({\n  payload: contacts,\n}));\nconst actionContactError = createAction('items/error', value => ({\n  payload: value,\n}));\n// Напиши Redux-операции для работы с асинхронными запросами по паттерну request, success и error.\nexport {\n  actionAddContact,\n  actionRemoveContact,\n  actionSetFilter,\n  actionContactRequestStatus,\n  actionGetContactsSuccess,\n  actionContactError,\n};\n","const axios = require('axios');\naxios.defaults.baseURL = 'http://localhost:3000';\nconst asyncGetContacts = async () => {\n  const { data } = await axios.get(`/contacts`);\n  return data;\n};\n\nconst postContacts = async postContact => {\n  await axios.post(`/contacts`, postContact);\n};\nconst deletePostContacts = async idContact => {\n  await axios.delete(`/contacts/${idContact}`);\n};\n\nexport { asyncGetContacts, postContacts, deletePostContacts };\n","import style from './ContactList.module.css';\nimport { toast } from 'react-toastify';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { actionRemoveContact } from '../../redux/reduxActions';\nimport { deletePostContacts } from '../../data/api-contacts';\n\nconst ContactList = () => {\n  // Добавь селекторы в файл contacts-selectors.js in my case it dose not have sens))) state => state\n  const { items, filter, isLoading } = useSelector(state => state);\n  const dispatch = useDispatch();\n  const onRemove = async idContact => {\n    await deletePostContacts(idContact);\n    dispatch(actionRemoveContact(idContact));\n  };\n\n  const getVisibleContacts = (items, filterInput) => {\n    return items.filter(contact =>\n      contact.name.toLowerCase().includes(filterInput.toLowerCase()),\n    );\n  };\n\n  if (items.length === 0) return null;\n  console.log(isLoading);\n\n  return (\n    <>\n      <h2>{isLoading}</h2>\n      <ul>\n        {getVisibleContacts(items, filter).map(({ id, name, phone }) => {\n          return (\n            <li key={id}>\n              {name} : {phone}\n              <button\n                onClick={() => {\n                  onRemove(id);\n                }}\n                className={style.button__delete}\n              >\n                Delete\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nexport default ContactList;\n","import {\n  actionContactRequestStatus,\n  actionGetContactsSuccess,\n  actionContactError,\n} from './reduxActions';\nimport { asyncGetContacts } from '../data/api-contacts';\nconst axios = require('axios');\naxios.defaults.baseURL = 'http://localhost:3000';\n\nconst asyncOperationGetContacts = () => async dispatch => {\n  try {\n    dispatch(actionContactRequestStatus('request'));\n    const data = await asyncGetContacts();\n    dispatch(actionGetContactsSuccess(data));\n  } catch (error) {\n    dispatch(actionContactError([]));\n    dispatch(actionContactRequestStatus('error'));\n  } finally {\n    dispatch(actionContactRequestStatus('success'));\n  }\n};\n\nexport { asyncOperationGetContacts };\n","import { createSelector } from 'reselect';\nconst getContact = state => state;\nconst getContactMemo = createSelector([getContact], contacts => contacts);\nexport { getContactMemo };\n","import style from './ContactForm.module.css';\nimport { toast } from 'react-toastify';\nimport { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { v4 as uuidv4 } from 'uuid';\nimport { asyncOperationGetContacts } from '../../redux/contactsOperation';\nimport { actionAddContact } from '../../redux/reduxActions';\nimport { postContacts } from '../../data/api-contacts';\nimport { getContactMemo } from '../../redux/contact-selectors';\n\nfunction ContactForm() {\n  // Добавь селекторы в файл contacts-selectors.js in my case it dose not have sens))) state => state\n  // add memo just for fill all tasks   сделай мемоизацию селекторов там, где необходимо.\n  const { items } = useSelector(getContactMemo);\n  const dispatch = useDispatch();\n  const onAdd = async newContact => {\n    await postContacts(newContact);\n    dispatch(actionAddContact(newContact));\n  };\n\n  useEffect(() => {\n    dispatch(asyncOperationGetContacts());\n  }, [dispatch]);\n\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n\n  const handleChangeForm = ({ target }) => {\n    const { name, value } = target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'phone':\n        setPhone(value);\n        break;\n      default:\n        console.log('Sorry, we are not have ' + name + '.');\n    }\n  };\n  const handleCheckUniqueContact = (arrayItems, nameContact) => {\n    const isExistContact = !!arrayItems.find(\n      contact => contact.name === nameContact,\n    );\n    isExistContact && alert('Contact is already exist');\n\n    return !isExistContact;\n  };\n\n  const validateFrom = () => {\n    if (!name || !phone) {\n      toast('Some filed is empty');\n      return false;\n    }\n\n    return handleCheckUniqueContact(items, name);\n  };\n\n  const resetForm = () => {\n    setName('');\n    setPhone('');\n  };\n\n  const handleFromSubmit = e => {\n    e.preventDefault();\n    const isValidForm = validateFrom();\n\n    if (!isValidForm) return;\n\n    const newContact = { id: uuidv4(), name, phone };\n    resetForm();\n    return onAdd(newContact);\n  };\n\n  return (\n    <form onSubmit={handleFromSubmit}>\n      <input\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Enter name\"\n        value={name}\n        onChange={handleChangeForm}\n      ></input>\n      <input\n        type=\"tel\"\n        name=\"phone\"\n        placeholder=\"Enter phone number\"\n        value={phone}\n        onChange={handleChangeForm}\n      ></input>\n      <button type=\"submit\">Add Contact</button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import style from './Filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { actionSetFilter } from '../../redux/reduxActions';\n\nconst Filter = () => {\n  // Добавь селекторы в файл contacts-selectors.js in my case it dose not have sens))) state => state\n  const { filter } = useSelector(state => state);\n  const dispatch = useDispatch();\n  const handleFilterChange = valueInput =>\n    dispatch(actionSetFilter(valueInput));\n  return (\n    <input\n      className={style.input__filter}\n      type=\"text\"\n      name=\"filter\"\n      value={filter}\n      onChange={({ target }) => handleFilterChange(target.value)}\n      placeholder=\"Enter name for Search\"\n    />\n  );\n};\nexport default Filter;\n","import 'react-toastify/dist/ReactToastify.css';\nimport { ToastContainer } from 'react-toastify';\nimport ContactList from 'components/ContactList/ContactList.js';\nimport ContactForm from 'components/ContactForm/ContactForm.js';\nimport Filter from 'components/Filter/Filter.js';\nimport style from './App.module.css';\n\nfunction App() {\n  return (\n    <>\n      <h2>From Contact</h2>\n      <ContactForm />\n      <h2>Contacts list</h2>\n      <Filter />\n      <ContactList />\n      <ToastContainer></ToastContainer>\n    </>\n  );\n}\n\nexport default App;\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\nimport {\n  actionAddContact,\n  actionRemoveContact,\n  actionSetFilter,\n  actionGetContactsSuccess,\n  actionContactError,\n  actionContactRequestStatus,\n} from './reduxActions';\n\nconst reducerContacts = createReducer([], {\n  [actionAddContact]: (state, { payload }) => {\n    const itemsAdd = [...state, payload];\n    return itemsAdd;\n  },\n  [actionRemoveContact]: (state, { payload }) => {\n    const itemsRemove = [...state.filter(contact => contact.id !== payload)];\n    return itemsRemove;\n  },\n  [actionGetContactsSuccess]: (state, { payload }) => {\n    return payload;\n  },\n  [actionContactError]: (state, { payload }) => {\n    return payload;\n  },\n});\n\nconst reducerFilter = createReducer('', {\n  [actionSetFilter]: (_, { payload }) => payload,\n});\nconst reducerLoading = createReducer('', {\n  [actionContactRequestStatus]: (_, { payload }) => payload,\n});\n\nexport const rootReducer = combineReducers({\n  items: reducerContacts,\n  filter: reducerFilter,\n  isLoading: reducerLoading,\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { rootReducer } from './rootReducer';\n\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\n// composeWithDevTools()\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nimport { store } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}